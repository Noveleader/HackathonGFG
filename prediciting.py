# -*- coding: utf-8 -*-
"""Untitled5.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1XhL21mQnqi0uTP9zJG-AiQM5yhGcDisC
"""

import pandas as pd
import matplotlib.pyplot as plt
import io
import numpy as np
import seaborn as sns
import statsmodels.api as s
import statsmodels.formula.api as sm
from sklearn.linear_model import LinearRegression
from google.colab import files
uploaded = files.upload()
df = pd.read_csv(io.BytesIO(uploaded['business_data.csv']))
df.head()

from sklearn.linear_model import LinearRegression
x=df['Profit'].values.reshape(-1,1)
y=df['Financial Year'].values.reshape(-1,1)
reg = LinearRegression()
reg.fit(x,y)
LinearRegression(copy_X=True,fit_intercept=True,n_jobs=1)
reg.intercept_[0],reg.coef_[0][0]
a=2014.7058578412043+0.0006982917000125407*b
b=10

df.isnull().sum()

df.info()

df.describe()

df.corr()

c=df.corr()
sns.heatmap(c,annot=True,cmap='Blues')

df['Total Investments'] = df.iloc[:,1] + df.iloc[:,2] + df.iloc[:,3] + df.iloc[:,5]
df['Total Liability'] = df.iloc[:,6] + df.iloc[:,7] + df.iloc[:,8] + df.iloc[:,9]
independent=['Total Investments','Loan','Total Liability']
y=df['Profit'].to_numpy()
y=y.reshape(-1,1)
x=df[independent].to_numpy()
x,y

from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test = train_test_split(x,y,train_size=0.99,random_state=0)
x_train

from sklearn.linear_model import LinearRegression
model=LinearRegression()
model.fit(x_train,y_train)
print('Model Trained')

y_pred=model.predict(x_test)
y_pred

data=pd.DataFrame(data={'Predicted value':y_pred.flatten(),'Actual Value':y_test.flatten()})
data

from sklearn.metrics import mean_absolute_error
mae=mean_absolute_error(y_pred,y_test)
mae

from sklearn.metrics import r2_score

r2Score = r2_score(y_pred, y_test)
print("R2 score of model is :" ,r2Score*100)

from sklearn.metrics import mean_squared_error

mse = mean_squared_error(y_pred, y_test)
print("Mean Squarred Error is :" ,mse*100)

rmse = np.sqrt(mean_squared_error(y_pred, y_test))
print("Root Mean Squarred Error is : ",rmse*100)

# Train the linear regression model
regressor = LinearRegression()
regressor.fit(X_train, y_train)
X_test = [[2022], [2023], [2024], [2025], [2026]]
y_pred = regressor.predict(X_test)

# Print the predicted profit for the next 5 years
for i in range(len(X_test)):
    print("Profit in", X_test[i][0], "is predicted to be", round(y_pred[i], 2))